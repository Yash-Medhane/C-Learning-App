
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Conditional Statements in C</title>
    <link rel="stylesheet" href="style/lesson1.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
</head>

<body>
    <div class="slider">
        
<div class="slide active">
            <img src="assets/lg.jpg" alt="">
            <div class="info">
                <h1>Introduction to Conditional Statements</h1>
                <p>Conditional statements in C allow you to make decisions in your program based on certain conditions. These statements alter the flow of program execution depending on whether the specified condition evaluates to true or false.</p>
                <p>Let's explore three fundamental conditional statements: <code>if-else</code>, <code>else if</code>, and nested <code>if-else</code>.</p>
            
            
            </div>

        </div>


        <div class="slide">
            <img src="assets/or.jpg" alt="">
            <div class="info">
                <h1>The <code>if-else</code> Statement</h1>
        <p>The <code>if-else</code> statement allows you to execute different blocks of code based on whether a specified condition evaluates to true or false.</p>
        <pre><code>if (condition) {
    // Block of code to be executed if the condition is true
} else {
    // Block of code to be executed if the condition is false
}</code></pre>
        
            </div>

        </div>

        <div class="slide">
            <img src="assets/or.jpg" alt="">
            <div class="info">
        <p>Example:</p>
        <pre><code>int num = 10;
if (num > 0) {
    printf("The number is positive.\n");
} else {
    printf("The number is non-positive.\n");
}</code></pre>
        <p>In this example, if the value of <code>num</code> is greater than 0, it prints that the number is positive; otherwise, it prints that the number is non-positive.</p>
            </div>

        </div>


        <div class="slide">
            <img src="assets/1.jpg" alt="">
            <div class="info">
                <p><strong>Break, continue, and goto statements provide ways to control the flow of your program, but they should be used judiciously to maintain code clarity and readability.</strong></p>
            </div>

        </div>

        <div class="slide">
            <img src="assets/2.jpg" alt="">
            <div class="info">
                <h1>The <code>else if</code> Statement</h1>
        <p>The <code>else if</code> statement allows you to check multiple conditions after the initial <code>if</code> statement. If the preceding <code>if</code> statement's condition is false, it evaluates the condition specified in the <code>else if</code> statement.</p>
        <pre><code>if (condition1) {
    // Code block executed if condition1 is true
} else if (condition2) {
    // Code block executed if condition1 is false and condition2 is true
} else {
    // Code block executed if both condition1 and condition2 are false
}</code></pre>
        
            </div>
        </div>

        <div class="slide">
            <img src="assets/2.jpg" alt="">
            <div class="info">
        <p>Example:</p>
        <pre><code>int num = 10;
if (num > 0) {
    printf("The number is positive.\n");
} else if (num < 0) {
    printf("The number is negative.\n");
} else {
    printf("The number is zero.\n");
}</code></pre>
        <p>In this example, if the value of <code>num</code> is greater than 0, it prints that the number is positive; if it's less than 0, it prints that the number is negative; otherwise, it prints that the number is zero.</p>
            </div>
        </div>

        <div class="slide">
            <img src="assets/3.jpg" alt="">
            <div class="info">
                <h1>The Nested <code>if-else</code> Statement</h1>
                <p>A nested <code>if-else</code> statement is an <code>if-else</code> statement inside another <code>if-else</code> statement. It allows for more complex decision-making by evaluating multiple conditions.</p>
                <pre><code>if (condition1) {
            if (condition2) {
                // Code block executed if condition1 and condition2 are true
            } else {
                // Code block executed if condition1 is true and condition2 is false
            }
        } else {
            // Code block executed if condition1 is false
        }</code></pre>
                
            </div>
        </div>

        
        <div class="slide">
            <img src="assets/3.jpg" alt="">
            <div class="info">
                <p>Example:</p>
                <pre><code>int num = 10;
        if (num > 0) {
            if (num % 2 == 0) {
                printf("The number is positive and even.\n");
            } else {
                printf("The number is positive and odd.\n");
            }
        } else {
            printf("The number is non-positive.\n");
        }</code></pre>
                <p>In this example, if the value of <code>num</code> is greater than 0, it checks whether it's even or odd. If it's even, it prints that the number is positive and even; otherwise, it prints that the number is positive and odd. If the value is not greater than 0, it prints that the number is non-positive.</p>
            </div>
        </div>

        <div class="slide">
            <img src="assets/bp.jpg" alt="">
            <div class="info">
                <p><strong>Mastering conditional statements is crucial for writing programs that make intelligent decisions based on varying conditions. Practice using different scenarios to gain a solid understanding!</strong></p>
            </div>
        </div>
        
        <div class="navigation">
            <i class="fas fa-chevron-left prev-btn"></i>
            <i class="fas fa-chevron-right next-btn"></i>
        </div>
        <div class="navigation-visibility">
            <div class="slide-icon active"></div>
            <div class="slide-icon"></div>
            <div class="slide-icon"></div>
            <div class="slide-icon"></div>
            <div class="slide-icon"></div>
            <div class="slide-icon"></div>
            <div class="slide-icon"></div>
            <div class="slide-icon"></div>
            <div class="slide-icon"></div>
        </div>
    </div>

</div>
<div class="play-button">
    <button onclick="window.location.href='unit2'">Play</button>
  </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const nextBtn = document.querySelector(".next-btn");
            const prevBtn = document.querySelector(".prev-btn");
            const slides = document.querySelectorAll(".slide");
            const slideIcons = document.querySelectorAll(".slide-icon");
            let slideNumber = 0;

            const showSlide = (n) => {
                slides.forEach((slide) => {
                    slide.classList.remove("active");
                });
                slideIcons.forEach((icon) => {
                    icon.classList.remove("active");
                });

                if (n < 0) {
                    slideNumber = slides.length - 1;
                } else if (n >= slides.length) {
                    slideNumber = 0;
                } else {
                    slideNumber = n;
                }

                slides[slideNumber].classList.add("active");
                slideIcons[slideNumber].classList.add("active");
            };

            nextBtn.addEventListener("click", () => {
                showSlide(slideNumber + 1);
            });

            prevBtn.addEventListener("click", () => {
                showSlide(slideNumber - 1);
            });
        });
    </script>

</body>

</html>