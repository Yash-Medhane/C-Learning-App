
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Recursion in C</title>
    <link rel="stylesheet" href="style/lesson1.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
</head>

<body>
    <div class="slider">
     


        <div class="slide active">
            <img src="assets/lg.jpg" alt="">
            <div class="info">
                <h1>What is Recursion?</h1>
        <p>Recursion is a programming technique where a function calls itself to solve a problem. It's like looking into a mirror that reflects an image within itself. Recursion simplifies complex problems by breaking them down into smaller, identical sub-problems.</p>
            </div>

        </div>

        <div class="slide">
            <img src="assets/bp.jpg" alt="">
            <div class="info">
                <h1>Basic Structure of a Recursive Function</h1>
        <p>A recursive function typically consists of two parts:</p>
        <ol>
            <li><strong>Base Case:</strong> It defines the simplest possible input where the function returns a known value without making further recursive calls.</li>
            <li><strong>Recursive Case:</strong> It defines the condition where the function calls itself with a modified input to solve a smaller sub-problem.</li>
        </ol>
    </section>

    <section class="content">
        
            </div>
        </div>

        <div class="slide">
            <img src="assets/or.jpg" alt="">
            <div class="info">
                
    </section>

    <section class="content">
        <h1>Recursion for Factorial</h1>
        <p>Calculating factorial is a classic example of recursion. The factorial of a non-negative integer n (denoted as n!) is the product of all positive integers less than or equal to n.</p>
        <pre><code>// Recursive function to calculate factorial
int factorial(int n) {
    if (n == 0 || n == 1)
        return 1; // Base case
    else
        return n * factorial(n - 1); // Recursive case
}</code></pre>
        <p>Here, if the value of n is either 0 or 1, the function returns 1 (base case). Otherwise, it multiplies n with the factorial of (n-1) (recursive case).</p>
            </div>
        </div>

        <div class="slide">
            <img src="assets/1.jpg" alt="">
            <div class="info">
                <h1>Tips for Using Recursive Functions</h1>
        <ul>
            <li><strong>Define Base Cases:</strong> Ensure that you have defined base cases to terminate recursion and prevent infinite loops.</li>
            <li><strong>Understand the Call Stack:</strong> Recursion uses the call stack, so too many recursive calls can lead to stack overflow errors.</li>
            <li><strong>Test with Small Inputs:</strong> Test your recursive function with small inputs to understand its behavior and performance.</li>
            <li><strong>Optimize When Possible:</strong> Some problems can be solved more efficiently using iterative approaches instead of recursion.</li>
        </ul>
            </div>
        </div>

        <div class="slide">
            <img src="assets/2.jpg" alt="">
            <div class="info">
                <p><strong>Recursion is a powerful tool in programming, but it requires careful handling to avoid pitfalls like infinite loops. Mastering recursion opens up new possibilities for solving complex problems!</strong></p>
            </div>
        </div>

        
        <div class="navigation">
            <i class="fas fa-chevron-left prev-btn"></i>
            <i class="fas fa-chevron-right next-btn"></i>
        </div>
        <div class="navigation-visibility">
            <div class="slide-icon active"></div>
            <div class="slide-icon"></div>
            <div class="slide-icon"></div>
            <div class="slide-icon"></div>           
            <div class="slide-icon"></div>            

        </div>
    </div>

</div>
<div class="play-button">
    <button onclick="window.location.href='unit3'">Play</button>
  </div>
  
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const nextBtn = document.querySelector(".next-btn");
            const prevBtn = document.querySelector(".prev-btn");
            const slides = document.querySelectorAll(".slide");
            const slideIcons = document.querySelectorAll(".slide-icon");
            let slideNumber = 0;

            const showSlide = (n) => {
                slides.forEach((slide) => {
                    slide.classList.remove("active");
                });
                slideIcons.forEach((icon) => {
                    icon.classList.remove("active");
                });

                if (n < 0) {
                    slideNumber = slides.length - 1;
                } else if (n >= slides.length) {
                    slideNumber = 0;
                } else {
                    slideNumber = n;
                }

                slides[slideNumber].classList.add("active");
                slideIcons[slideNumber].classList.add("active");
            };

            nextBtn.addEventListener("click", () => {
                showSlide(slideNumber + 1);
            });

            prevBtn.addEventListener("click", () => {
                showSlide(slideNumber - 1);
            });
        });
    </script>

</body>

</html>