
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Categories of Functions in C</title>
    <link rel="stylesheet" href="style/lesson1.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
</head>

<body>
    <div class="slider">
        <div class="slide active">
            <img src="assets/bp.jpg" alt="">
            <div class="info cssanimation leFadeInLeft sequence">
                <h1>Categories of Functions in C</h1>
                <p>Understanding different types of functions in C programming.</p>
                   
            </div>
        </div>


        <div class="slide">
            <img src="assets/lg.jpg" alt="">
            <div class="info">
                <h1>Library Functions</h1>
                <p>Library functions are pre-defined functions provided by C standard libraries. They are ready-made functions that perform common tasks, such as mathematical calculations, input/output operations, string manipulation, etc.</p>
                <p>Example:</p>
                <pre><code>#include &lt;stdio.h&gt;
        
        int main() {
            printf("Hello, World!\n");
            return 0;
        }</code></pre>
            </div>

        </div>

        <div class="slide">
            <img src="assets/or.jpg" alt="">
            <div class="info">
                <h1>User-Defined Functions</h1>
        <p>User-defined functions are functions created by the programmer to perform specific tasks within a program. They promote code reusability and modularity by allowing you to break down your program into smaller, manageable parts.</p>
        
            </div>

        </div>

        <div class="slide">
            <img src="assets/or.jpg" alt="">
            <div class="info">
                
        <p>Example:</p>
        <pre><code>#include &lt;stdio.h&gt;

// Function declaration
void greet();

int main() {
    greet(); // Function invocation
    return 0;
}

// Function definition
void greet() {
    printf("Hello, World!\n");
}</code></pre>
            </div>

        </div>

        <div class="slide">
            <img src="assets/1.jpg" alt="">
            <div class="info">
                <h1>Recursive Functions</h1>
        <p>Recursive functions are functions that call themselves either directly or indirectly to solve a problem. They are often used to solve problems that can be broken down into smaller, similar subproblems.</p>
       
            </div>

        </div>

        <div class="slide">
            <img src="assets/1.jpg" alt="">
            <div class="info">
                
        <p>Example:</p>
        <pre><code>#include &lt;stdio.h&gt;

// Recursive function to calculate factorial
int factorial(int n) {
    if (n == 0)
        return 1;
    else
        return n * factorial(n - 1);
}

int main() {
    int num = 5;
    printf("Factorial of %d = %d\n", num, factorial(num));
    return 0;
}</code></pre>
            </div>

        </div>

        <div class="slide">
            <img src="assets/2.jpg" alt="">
            <div class="info">
                <p><strong>Understanding different categories of functions enhances your software development skills and allows you to choose the right approach for solving various programming problems.</strong></p>
            </div>
        </div>

        
        <div class="navigation">
            <i class="fas fa-chevron-left prev-btn"></i>
            <i class="fas fa-chevron-right next-btn"></i>
        </div>
        <div class="navigation-visibility">
            <div class="slide-icon active"></div>
            <div class="slide-icon"></div>
            <div class="slide-icon"></div>
            <div class="slide-icon"></div>
            <div class="slide-icon"></div>
            <div class="slide-icon"></div>
        </div>
    </div>

</div>
<div class="play-button">
    <button onclick="window.location.href='unit3'">Play</button>
  </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const nextBtn = document.querySelector(".next-btn");
            const prevBtn = document.querySelector(".prev-btn");
            const slides = document.querySelectorAll(".slide");
            const slideIcons = document.querySelectorAll(".slide-icon");
            let slideNumber = 0;

            const showSlide = (n) => {
                slides.forEach((slide) => {
                    slide.classList.remove("active");
                });
                slideIcons.forEach((icon) => {
                    icon.classList.remove("active");
                });

                if (n < 0) {
                    slideNumber = slides.length - 1;
                } else if (n >= slides.length) {
                    slideNumber = 0;
                } else {
                    slideNumber = n;
                }

                slides[slideNumber].classList.add("active");
                slideIcons[slideNumber].classList.add("active");
            };

            nextBtn.addEventListener("click", () => {
                showSlide(slideNumber + 1);
            });

            prevBtn.addEventListener("click", () => {
                showSlide(slideNumber - 1);
            });
        });
    </script>

</body>

</html>