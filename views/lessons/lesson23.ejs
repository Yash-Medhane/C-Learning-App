
Conversation opened. 1 unread message.

Skip to content
Using Gmail with screen readers
1 of 1,345
Unit 5:- Operation in file
Inbox

Mayur Kapase
Attachments
11:42 AM (1 minute ago)
to me


 One attachment
  •  Scanned by Gmail
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Operations on Files in C</title>
    <link rel="stylesheet" href="style/lesson1.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
</head>

<body>
    <div class="slider">
        
 <div class="slide active">
            <img src="assets/lg.jpg" alt="">
            <div class="info">
                <h1>Opening a File in Write Mode</h1>
        <p>To open a file in write mode, you can use the `fopen()` function with the mode `"w"`. If the file doesn't exist, it creates a new one. If it exists, it truncates the file to zero length.</p>
        <pre><code>// Opening a file in write mode
FILE *file = fopen("example.txt", "w");
if (file != NULL) {
    // File opened successfully, perform operations
    // ...
    fclose(file); // Close the file after operations
}</code></pre>
            </div>

        </div>

        <div class="slide">
            <img src="assets/or.jpg" alt="">
            <div class="info">
                <h1>Appending to a File</h1>
                <p>To append data to a file, you can use the mode `"a"` with `fopen()`. It opens the file for writing at the end of the file (if it exists) or creates a new file.</p>
                <pre><code>// Appending data to a file
        FILE *file = fopen("example.txt", "a");
        if (file != NULL) {
            // File opened successfully, perform append operations
            // ...
            fclose(file); // Close the file after append operations
        }</code></pre></section>

    <section class="content">
        
            </div>
        </div>

        <div class="slide">
            <img src="assets/1.jpg" alt="">
            <div class="info">
                <h1>Closing a File</h1>
        <p>After performing operations on a file, it's essential to close it using the `fclose()` function to release system resources.</p>
        <pre><code>// Closing a file
fclose(file);</code></pre>
            </div>
        </div>

        <div class="slide">
            <img src="assets/1.jpg" alt="">
            <div class="info">
                <h1>Error Handling</h1>
                <p>Always check if the file operations succeed or fail. If the file operation fails, handle the error appropriately.</p>
                <pre><code>// Error handling
        if (file == NULL) {
            printf("Error opening file!\n");
            // Handle the error, such as exiting the program or returning an error code
        }</code></pre>
            </div>
        </div>

        <div class="slide">
            <img src="assets/2.jpg" alt="">
            <div class="info">
                <p><strong>Proper error handling and understanding file operations are crucial for robust file handling in C programming.</strong></p>
            </div>
        </div>
        
        <div class="navigation">
            <i class="fas fa-chevron-left prev-btn"></i>
            <i class="fas fa-chevron-right next-btn"></i>
        </div>
        <div class="navigation-visibility">
            <div class="slide-icon active"></div>
            <div class="slide-icon"></div>
            <div class="slide-icon"></div>
            <div class="slide-icon"></div>
            <div class="slide-icon"></div>

        </div>
    </div>

    <div class="play-button">
        <button onclick="window.location.href='unit5'">Play</button>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const nextBtn = document.querySelector(".next-btn");
            const prevBtn = document.querySelector(".prev-btn");
            const slides = document.querySelectorAll(".slide");
            const slideIcons = document.querySelectorAll(".slide-icon");
            let slideNumber = 0;

            const showSlide = (n) => {
                slides.forEach((slide) => {
                    slide.classList.remove("active");
                });
                slideIcons.forEach((icon) => {
                    icon.classList.remove("active");
                });

                if (n < 0) {
                    slideNumber = slides.length - 1;
                } else if (n >= slides.length) {
                    slideNumber = 0;
                } else {
                    slideNumber = n;
                }

                slides[slideNumber].classList.add("active");
                slideIcons[slideNumber].classList.add("active");
            };

            nextBtn.addEventListener("click", () => {
                showSlide(slideNumber + 1);
            });

            prevBtn.addEventListener("click", () => {
                showSlide(slideNumber - 1);
            });
        });
    </script>

</body>

</html>